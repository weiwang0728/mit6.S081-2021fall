lab2 syscall

1. System call tracing
问题描述:用户程序调用系统调用trace之后,在进行系统调用时会根据是否被trace打印到命令行。

解决思路: 
    1. trace系统调用改变当前进程的trace_mask(进程初始化为0)。
    2. 在内核进行系统调用入口选择流程的时候， 判断 (1 << syscall_num & trace_mask) 决定是否打印当前执行的系统调用。

2. Sysinfo
问题描述： 用户程序调用系统调用sysinfo, 传入结构体sysinfo, 返回系统当前实际的sysinfo, 即当前可用物理内存的大小和当前系统进程的数量。

解决思路:
    1. 实现计算当前系统可用物理内存大小和当前系统进程数量的函数。
    2. sysinfo返回1中的函数的返回值。

拓展性问题：
1. 内核系统调用如何实现读取用户进程传入的参数？
   系统调用的参数保存到trapframe中的a0 - a5寄存器。

2. 系统调用如何实现返回变量给用户进程？
    使用用户进程传入的addr,根据页表的映射,将变量copy到虚拟地址addr对应的物理内存里,即值就保存到了用户进程。